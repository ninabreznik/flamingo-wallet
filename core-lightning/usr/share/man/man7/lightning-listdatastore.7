.\" -*- mode: troff; coding: utf-8 -*-
.TH "LIGHTNING-LISTDATASTORE" "7" "" "Core Lightning pre-v24.08" ""
.SH
NAME
.LP
lightning-listdatastore -- Command for listing (plugin) data
.SH
SYNOPSIS
.LP
\fBlistdatastore\fR [\fIkey\fR] 
.SH
DESCRIPTION
.LP
The \fBlistdatastore\fR RPC command allows plugins to fetch data which was stored in the Core Lightning database.
.IP "\(bu" 2
\fBkey\fR (one of, optional):
.RS
.IP "\(bu" 2
(array of strings): All immediate children of the \fIkey\fR (or root children) are returned.
Using the first element of the key as the plugin name (e.g. \fC[ 'summary' ]\fR) is recommended.
An array of values to form a hierarchy (though a single value is treated as a one-element array).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
(string, optional)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
(string)
.RE
.SH
RETURN VALUE
.LP
On success, an object containing \fBdatastore\fR is returned. It is an array of objects, where each object contains:
.IP "\(bu" 2
\fBkey\fR (array of strings):
.RS
.IP "\(bu" 2
(string, optional): Part of the key added to the datastore.
.RE
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBgeneration\fR (u64, optional): The number of times this has been updated.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBhex\fR (hex, optional): The hex data from the datastore.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBstring\fR (string, optional): The data as a string, if it's valid utf-8.
.SH
ERRORS
.LP
The following error codes may occur:
.IP "\(bu" 2
-32602: invalid parameters.
.SH
AUTHOR
.LP
Rusty Russell <\fIrusty@rustcorp.com.au\fR> is mainly responsible.
.SH
SEE ALSO
.LP
lightning-datastore(7), lightning-deldatastore(7), lightning-datastoreusage(7)
.SH
RESOURCES
.LP
Main web site: \fIhttps://github.com/ElementsProject/lightning\fR
.SH
EXAMPLES
.LP
\fBExample 1\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli listdatastore -k \(dqkey\(dq='[\(dqtest\(dq]'
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:listdatastore#1\(dq,
  \(dqmethod\(dq: \(dqlistdatastore\(dq,
  \(dqparams\(dq: {
    \(dqkey\(dq: [
      \(dqtest\(dq
    ]
  }
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqdatastore\(dq: [
    {
      \(dqkey\(dq: [
        \(dqtest\(dq,
        \(dqname\(dq
      ],
      \(dqgeneration\(dq: 0,
      \(dqhex\(dq: \(dq736176696e67206461746120746f207468652073746f7265\(dq,
      \(dqstring\(dq: \(dqsaving data to the store\(dq
    }
  ]
}
.EE
.PP
\fBExample 2\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli listdatastore -k \(dqkey\(dq=\(dqotherkey\(dq
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:listdatastore#2\(dq,
  \(dqmethod\(dq: \(dqlistdatastore\(dq,
  \(dqparams\(dq: {
    \(dqkey\(dq: \(dqotherkey\(dq
  }
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqdatastore\(dq: [
    {
      \(dqkey\(dq: [
        \(dqotherkey\(dq
      ],
      \(dqgeneration\(dq: 1,
      \(dqhex\(dq: \(dq666f6f626172\(dq,
      \(dqstring\(dq: \(dqfoobar\(dq
    }
  ]
}
.EE
.PP
