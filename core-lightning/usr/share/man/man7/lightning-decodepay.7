.\" -*- mode: troff; coding: utf-8 -*-
.TH "LIGHTNING-DECODEPAY" "7" "" "Core Lightning pre-v24.08" ""
.SH
NAME
.LP
lightning-decodepay -- Command for decoding a bolt11 string (low-level)
.SH
SYNOPSIS
.LP
\fBdecodepay\fR \fIbolt11\fR [\fIdescription\fR] 
.SH
DESCRIPTION
.LP
Command \fIadded\fR in v23.05.
.PP
The \fBdecodepay\fR RPC command checks and parses a \fIbolt11\fR string as specified by the BOLT 11 specification.
.IP "\(bu" 2
\fBbolt11\fR (string): Bolt11 invoice to decode.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBdescription\fR (string, optional): Description of the invoice to decode.
.SH
RETURN VALUE
.LP
On success, an object is returned, containing:
.IP "\(bu" 2
\fBcurrency\fR (string): The BIP173 name for the currency.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBcreated_at\fR (u64): The UNIX-style timestamp of the invoice.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBexpiry\fR (u64): The number of seconds this is valid after \fItimestamp\fR.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpayee\fR (pubkey): The public key of the recipient.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpayment_hash\fR (hash): The hash of the \fIpayment_preimage\fR.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBsignature\fR (signature): Signature of the \fIpayee\fR on this invoice.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBmin_final_cltv_expiry\fR (u32): The minimum CLTV delay for the final node.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBamount_msat\fR (msat, optional): Amount the invoice asked for.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBdescription\fR (string, optional): The description of the purpose of the purchase.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBdescription_hash\fR (hash, optional): The hash of the description, in place of \fIdescription\fR.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpayment_secret\fR (hash, optional): The secret to hand to the payee node.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBfeatures\fR (hex, optional): The features bitmap for this invoice.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpayment_metadata\fR (hex, optional): The payment_metadata to put in the payment.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBfallbacks\fR (array of objects, optional): Onchain addresses.:
.RS
.IP "\(bu" 2
\fBtype\fR (string) (one of \(dqP2PKH\(dq, \(dqP2SH\(dq, \(dqP2WPKH\(dq, \(dqP2WSH\(dq, \(dqP2TR\(dq): The address type (if known).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBhex\fR (hex): Raw encoded address.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBaddr\fR (string, optional): The address in appropriate format for \fItype\fR.
.RE
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBroutes\fR (array of arrays, optional): Route hints to the \fIpayee\fR.:
.RS
.IP "\(bu" 2
(array of objects): Hops in the route.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpubkey\fR (pubkey): The public key of the node.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBshort_channel_id\fR (short_channel_id): A channel to the next peer.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBfee_base_msat\fR (msat): The base fee for payments.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBfee_proportional_millionths\fR (u32): The parts-per-million fee for payments.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBcltv_expiry_delta\fR (u32): The CLTV delta across this hop.
.RE
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBextra\fR (array of objects, optional): Any extra fields we didn't know how to parse.:
.RS
.IP "\(bu" 2
\fBtag\fR (string) (always 1 characters): The bech32 letter which identifies this field.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBdata\fR (string): The bech32 data for this field.
.RE
.LP
Technically, the \fIdescription\fR field is optional if a \fIdescription_hash\fR field is given, but in this case \fBdecodepay\fR will only succeed if the optional \fIdescription\fR field is passed and matches the \fIdescription_hash\fR. In practice, these are currently unused.
.SH
AUTHOR
.LP
Rusty Russell <\fIrusty@rustcorp.com.au\fR> is mainly responsible.
.SH
SEE ALSO
.LP
lightning-pay(7), lightning-getroute(7), lightning-sendpay(7)
.SH
RESOURCES
.LP
\fBBOLT #11\fR <\fIhttps://github.com/lightning/bolts/blob/master/11-payment-encoding.md\fR>
.PP
Main web site: \fIhttps://github.com/ElementsProject/lightning\fR
.SH
EXAMPLES
.LP
\fBExample 1\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli decodepay -k \(dqbolt11\(dq=\(dqlnbcrt100n1pn2s3xxsp5s4wvy67lduz0tpxzmw0x0m8z5krfn6ppeu3a9t559tcdxquqwjfqpp5r0zx30ded4lpxp7vrdxqenmwr9rqftn93dcymvmuaxpu8y5zxunqdqcdscnzgryv4ekxunfwp6xjmmwxqyjw5qcqp9rzjqgkjyd3q5dv6gllh77kygly9c3kfy0d9xwyjyxsq2nq3c83u5vw4jqqqd5qqqqgqqyqqqqqpqqqqqzsqqc9qxpqysgqyk0lnqhsl07405jsqzyyaheu3dhxdv6s498ex97yvacs04gf6carplepnh5drlse8spy8nluz4uwj78h47ez6hak9md2s8mtg6yy5tcqt8yfsj\(dq
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:decodepay#1\(dq,
  \(dqmethod\(dq: \(dqdecodepay\(dq,
  \(dqparams\(dq: {
    \(dqbolt11\(dq: \(dqlnbcrt100n1pn2s3xxsp5s4wvy67lduz0tpxzmw0x0m8z5krfn6ppeu3a9t559tcdxquqwjfqpp5r0zx30ded4lpxp7vrdxqenmwr9rqftn93dcymvmuaxpu8y5zxunqdqcdscnzgryv4ekxunfwp6xjmmwxqyjw5qcqp9rzjqgkjyd3q5dv6gllh77kygly9c3kfy0d9xwyjyxsq2nq3c83u5vw4jqqqd5qqqqgqqyqqqqqpqqqqqzsqqc9qxpqysgqyk0lnqhsl07405jsqzyyaheu3dhxdv6s498ex97yvacs04gf6carplepnh5drlse8spy8nluz4uwj78h47ez6hak9md2s8mtg6yy5tcqt8yfsj\(dq
  }
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqcurrency\(dq: \(dqbcrt\(dq,
  \(dqcreated_at\(dq: 1722303686,
  \(dqexpiry\(dq: 604800,
  \(dqpayee\(dq: \(dq0266e4598d1d3c415f572a8488830b60f7e744ed9235eb0b1ba93283b315c03518\(dq,
  \(dqamount_msat\(dq: 10000,
  \(dqdescription\(dq: \(dql11 description\(dq,
  \(dqmin_final_cltv_expiry\(dq: 5,
  \(dqpayment_secret\(dq: \(dq855cc26bdf6f04f584c2db9e67ece2a58699e821cf23d2ae942af0d303807492\(dq,
  \(dqfeatures\(dq: \(dq02024100\(dq,
  \(dqroutes\(dq: [
    [
      {
        \(dqpubkey\(dq: \(dq022d223620a359a47ff7f7ac447c85c46c923da53389221a0054c11c1e3ca31d59\(dq,
        \(dqshort_channel_id\(dq: \(dq109x1x1\(dq,
        \(dqfee_base_msat\(dq: 1,
        \(dqfee_proportional_millionths\(dq: 10,
        \(dqcltv_expiry_delta\(dq: 6
      }
    ]
  ],
  \(dqpayment_hash\(dq: \(dq1bc468bdb96d7e1307cc1b4c0ccf6e194604ae658b704db37ce983c392823726\(dq,
  \(dqsignature\(dq: \(dq30440220259ff982f0fbfd57d25000884edf3c8b6e66b350a94f9317c4677107d509d63a022030ff219de8d1fe193c0243cffc1578e978f7afb22d5fb62edaa81f6b46884a2f\(dq
}
.EE
.PP
