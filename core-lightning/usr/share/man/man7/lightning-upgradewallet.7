.\" -*- mode: troff; coding: utf-8 -*-
.TH "LIGHTNING-UPGRADEWALLET" "7" "" "Core Lightning pre-v24.08" ""
.SH
NAME
.LP
lightning-upgradewallet -- Command to spend all P2SH-wrapped inputs into a Native Segwit output
.SH
SYNOPSIS
.LP
\fBupgradewallet\fR [\fIfeerate\fR] [\fIreservedok\fR] 
.SH
DESCRIPTION
.LP
\fCupgradewallet\fR is a convenience RPC which will spend all p2sh-wrapped Segwit deposits in a wallet into a single Native Segwit P2WPKH address.
.IP "\(bu" 2
\fBfeerate\fR (feerate, optional): Feerate for the upgrade transaction. The default is \fIopening\fR. \fI(added v23.02)\fR
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBreservedok\fR (boolean, optional): Tells the wallet to include all P2SH-wrapped inputs, including reserved ones. \fI(added v23.02)\fR
.SH
USAGE
.LP
The caller is trying to buy a liquidity ad but the command keeps failing. They have funds in their wallet, but they're all P2SH-wrapped outputs.
.PP
The caller can call \fCupgradewallet\fR to convert their funds to native segwit outputs, which are valid for liquidity ad buys.
.SH
RETURN VALUE
.LP
On success, an object is returned, containing:
.IP "\(bu" 2
\fBupgraded_outs\fR (u64): Count of spent/upgraded UTXOs. \fI(added v23.02)\fR
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpsbt\fR (string, optional): The PSBT that was finalized and sent. \fI(added v23.02)\fR
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBtx\fR (hex, optional): The raw transaction which was sent. \fI(added v23.02)\fR
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBtxid\fR (txid, optional): The txid of the \fBtx\fR. \fI(added v23.02)\fR
.SH
AUTHOR
.LP
Lisa Neigut <\fIniftynei@gmail.com\fR> is mainly responsible.
.SH
SEE ALSO
.LP
lightning-utxopsbt(7), lightning-reserveinputs(7), lightning-unreserveinputs(7)
.SH
RESOURCES
.LP
Main web site: \fIhttps://github.com/ElementsProject/lightning\fR
.SH
EXAMPLES
.LP
\fBExample 1\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli upgradewallet
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:upgradewallet#1\(dq,
  \(dqmethod\(dq: \(dqupgradewallet\(dq,
  \(dqparams\(dq: {}
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqupgraded_outs\(dq: 0
}
.EE
.PP
\fBExample 2\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli upgradewallet -k \(dqfeerate\(dq=\(dqurgent\(dq \(dqreservedok\(dq=True
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:upgradewallet#2\(dq,
  \(dqmethod\(dq: \(dqupgradewallet\(dq,
  \(dqparams\(dq: {
    \(dqfeerate\(dq: \(dqurgent\(dq,
    \(dqreservedok\(dq: true
  }
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqtx\(dq: \(dq0200000001e3148821838724c371613dfe954620b99b689803f29b17e33b85f655afc812170000000000fdffffff0135143101000000002251206c27e1956acfa61e68292c80908880e813450f754132e8a2ac471a86bf1326b566000000\(dq,
  \(dqtxid\(dq: \(dq52b8957df7b017c4c187641491b80ca209c52b286eba60afac7292a868fdf9d0\(dq,
  \(dqpsbt\(dq: \(dqcHNidP8BAgQCAAAAAQMEZgAAAAEEAQEBBQEBAQYBAwH7BAIAAAAAAQBzAgAAAAEJawGuY9Yx4yHwOdSd9MWwVc46+mVaPVwiwqhZT0H1zQAAAAAA/f///wIALTEBAAAAABepFGVXKPNs/jbQGqUNMjZwRGn4SlVAh3HE1CgBAAAAF6kUfN+wjm5E/BFSxPQjIl0rcUgkip2HZQAAAAEBIAAtMQEAAAAAF6kUZVco82z+NtAapQ0yNnBEafhKVUCHIgICucDGhE4SpTHJaOVcVQeOwW2b92vpKQ/YfRzKcrSDmhdHMEQCIBsJrbJqp2dLLklUvvheXUy1uu4eIMkebSbbYkQHWItOAiBEuulzciFVMVB7Rkt5eOb53CX5hq7Vq2LbwBHB6ApUTwEBBBYAFNa5adNt/9rZhpGT9mPuSA39xzSIIgYCucDGhE4SpTHJaOVcVQeOwW2b92vpKQ/YfRzKcrSDmhcI1rlp0wAAAAABDiDjFIghg4ckw3FhPf6VRiC5m2iYA/KbF+M7hfZVr8gSFwEPBAAAAAABEAT9////AAEDCDUUMQEAAAAAAQQiUSBsJ+GVas+mHmgpLICQiIDoE0UPdUEy6KKsRxqGvxMmtSEHWnm7u0BtS8KN8F+mqHMoz7AqfhN0O+zc0d/P4HHC4BAJAH0I2ZcFAAAAAA==\(dq,
  \(dqupgraded_outs\(dq: 1
}
.EE
.PP
