.\" -*- mode: troff; coding: utf-8 -*-
.TH "LIGHTNING-CREATEINVOICE" "7" "" "Core Lightning pre-v24.08" ""
.SH
NAME
.LP
lightning-createinvoice -- Low-level invoice creation
.SH
SYNOPSIS
.LP
\fBcreateinvoice\fR \fIinvstring\fR \fIlabel\fR \fIpreimage\fR 
.SH
DESCRIPTION
.LP
The \fBcreateinvoice\fR RPC command signs and saves an invoice into the database.
.IP "\(bu" 2
\fBinvstring\fR (string): The bolt11 form, but the final signature is ignored. Minimal sanity checks are done. (Note: if \fBexperimental-offers\fR is enabled, \fIinvstring\fR can actually be an unsigned bolt12 invoice).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBlabel\fR (one of): A unique string or number (which is treated as a string, so \fC01\fR is different from \fC1\fR); it is never revealed to other nodes on the lightning network, but it can be used to query the status of this invoice.:
.RS
.IP "\(bu" 2
(string)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
(integer)
.RE
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpreimage\fR (hex): The preimage to supply upon successful payment of the invoice.
.SH
RETURN VALUE
.LP
(Note: the return format is the same as lightning-listinvoices(7)).
On success, an object is returned, containing:
.IP "\(bu" 2
\fBlabel\fR (string): The label for the invoice.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpayment_hash\fR (hash): The hash of the \fIpayment_preimage\fR which will prove payment.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBstatus\fR (string) (one of \(dqpaid\(dq, \(dqexpired\(dq, \(dqunpaid\(dq): Whether it has been paid, or can no longer be paid.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBdescription\fR (string): Description extracted from \fBbolt11\fR or \fBbolt12\fR.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBexpires_at\fR (u64): UNIX timestamp of when invoice expires (or expired).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBcreated_index\fR (u64): 1-based index indicating order this invoice was created in. \fI(added v23.08)\fR
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBbolt11\fR (string, optional): The bolt11 string (always present unless \fBbolt12\fR is).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBbolt12\fR (string, optional): The bolt12 string instead of \fBbolt11\fR (\fBexperimental-offers\fR only).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBamount_msat\fR (msat, optional): The amount of the invoice (if it has one).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpay_index\fR (u64, optional): Incrementing id for when this was paid (\fBstatus\fR \fIpaid\fR only).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBamount_received_msat\fR (msat, optional): Amount actually received (\fBstatus\fR \fIpaid\fR only).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpaid_at\fR (u64, optional): UNIX timestamp of when invoice was paid (\fBstatus\fR \fIpaid\fR only).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpaid_outpoint\fR (object, optional): Outpoint this invoice was paid with (\fBstatus\fR \fIpaid\fR only). \fI(added v23.11)\fR:
.RS
.IP "\(bu" 2
\fBtxid\fR (txid): ID of the transaction that paid the invoice (\fBstatus\fR \fIpaid\fR only). \fI(added v23.11)\fR
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBoutnum\fR (u32): The 0-based output number of the transaction that paid the invoice (\fBstatus\fR \fIpaid\fR only). \fI(added v23.11)\fR
.RE
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpayment_preimage\fR (secret, optional): The proof of payment: SHA256 of this \fBpayment_hash\fR.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBlocal_offer_id\fR (hex, optional) (always 64 characters): The \fIid\fR of our offer which created this invoice (\fBexperimental-offers\fR only).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBinvreq_payer_note\fR (string, optional): The optional \fIinvreq_payer_note\fR from invoice_request which created this invoice (\fBexperimental-offers\fR only).
.SH
ERRORS
.LP
On failure, an error is returned and no invoice is created. If the lightning process fails before responding, the caller should use lightning-listinvoices(7) to query whether this invoice was created or not.
.PP
The following error codes may occur:
.IP "\(bu" 2
-1: Catchall nonspecific error.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
900: An invoice with the given \fIlabel\fR already exists.
.SH
AUTHOR
.LP
Rusty Russell <\fIrusty@rustcorp.com.au\fR> is mainly responsible.
.SH
SEE ALSO
.LP
lightning-invoice(7), lightning-listinvoices(7), lightning-delinvoice(7), lightning-getroute(7), lightning-sendpay(7), lightning-offer(7)
.SH
RESOURCES
.LP
Main web site: \fIhttps://github.com/ElementsProject/lightning\fR
.SH
EXAMPLES
.LP
\fBExample 1\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli createinvoice -k \(dqinvstring\(dq=\(dqlnbcrt1u1pn2s38zsp5j9w8t9p2y6an5se63n3vkpp8c20vdsthtn78sv5t2lmt57l742wqpp5wtxkappzcsrlkmgfs6g0zyct0hkhashh7hsaxz7e65slq9fkx7fsdqcdscnxgryv4ekxunfwp6xjmmwxqyjw5qcqp9rzjqgkjyd3q5dv6gllh77kygly9c3kfy0d9xwyjyxsq2nq3c83u5vw4jqqqd5qqqqgqqyqqqqqpqqqqqzsqqc9qxpqysgq4sjk5smmjpgu6v8k7xc7q5evf370kdvt8s8t6x9he6jh9sgagxyqw8l7ctdldf8vgyz3pdfwr4hn9r6u5xvd48w2f2atu752zwqsulspwpxne4\(dq \(dqlabel\(dq=\(dqlbl_l13\(dq \(dqpreimage\(dq=\(dq0101010101010101010101010101010101010101010101010101010101010101\(dq
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:createinvoice#1\(dq,
  \(dqmethod\(dq: \(dqcreateinvoice\(dq,
  \(dqparams\(dq: {
    \(dqinvstring\(dq: \(dqlnbcrt1u1pn2s38zsp5j9w8t9p2y6an5se63n3vkpp8c20vdsthtn78sv5t2lmt57l742wqpp5wtxkappzcsrlkmgfs6g0zyct0hkhashh7hsaxz7e65slq9fkx7fsdqcdscnxgryv4ekxunfwp6xjmmwxqyjw5qcqp9rzjqgkjyd3q5dv6gllh77kygly9c3kfy0d9xwyjyxsq2nq3c83u5vw4jqqqd5qqqqgqqyqqqqqpqqqqqzsqqc9qxpqysgq4sjk5smmjpgu6v8k7xc7q5evf370kdvt8s8t6x9he6jh9sgagxyqw8l7ctdldf8vgyz3pdfwr4hn9r6u5xvd48w2f2atu752zwqsulspwpxne4\(dq,
    \(dqlabel\(dq: \(dqlbl_l13\(dq,
    \(dqpreimage\(dq: \(dq0101010101010101010101010101010101010101010101010101010101010101\(dq
  }
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqlabel\(dq: \(dqlbl_l13\(dq,
  \(dqbolt11\(dq: \(dqlnbcrt1u1pn2s38zsp5j9w8t9p2y6an5se63n3vkpp8c20vdsthtn78sv5t2lmt57l742wqpp5wtxkappzcsrlkmgfs6g0zyct0hkhashh7hsaxz7e65slq9fkx7fsdqcdscnxgryv4ekxunfwp6xjmmwxqyjw5qcqp9rzjqgkjyd3q5dv6gllh77kygly9c3kfy0d9xwyjyxsq2nq3c83u5vw4jqqqd5qqqqgqqyqqqqqpqqqqqzsqqc9qxpqysgqcjq9fq26ph2skcsm65xjwnw3crgygpampszjcvqs8aw2zf3jzcxqg4dh58fm8mxul29vh5urpyjkll9m4dq3807xcmq2q9yvgd5qt7qp695qvu\(dq,
  \(dqpayment_hash\(dq: \(dq72cd6e8422c407fb6d098690f1130b7ded7ec2f7f5e1d30bd9d521f015363793\(dq,
  \(dqamount_msat\(dq: 100000,
  \(dqstatus\(dq: \(dqunpaid\(dq,
  \(dqdescription\(dq: \(dql13 description\(dq,
  \(dqexpires_at\(dq: 1722908514,
  \(dqcreated_index\(dq: 7
}
.EE
.PP
