.\" -*- mode: troff; coding: utf-8 -*-
.TH "LIGHTNING-CHECKRUNE" "7" "" "Core Lightning pre-v24.08" ""
.SH
NAME
.LP
lightning-checkrune -- Command to Validate Rune
.SH
SYNOPSIS
.LP
\fBcheckrune\fR \fIrune\fR [\fInodeid\fR] [\fImethod\fR] [\fIparams\fR] 
.SH
DESCRIPTION
.LP
Command \fIadded\fR in v23.08.
.PP
The \fBcheckrune\fR RPC command checks the validity/authorization rights of specified rune for the given nodeid, method, and params.
.PP
If successful, the rune \(dqusage\(dq counter (used for ratelimiting) is incremented.
.PP
See lightning-createrune(7) for the fields in the rune which are checked.
.IP "\(bu" 2
\fBrune\fR (string): Rune to check for authorization.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBnodeid\fR (string, optional): Node id of requesting node \fI(required until v23.11)\fR.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBmethod\fR (string, optional): Method for which rune needs to be validated \fI(required until v23.11)\fR.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBparams\fR (one of, optional):
.RS
.IP "\(bu" 2
(array): Array of positional parameters.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
(object): Parameters for method.:
.RE
.SH
RETURN VALUE
.LP
On success, an object is returned, containing:
.IP "\(bu" 2
\fBvalid\fR (boolean): True if the rune is valid.
.SH
ERRORS
.LP
The following error codes may occur:
.IP "\(bu" 2
1501 (RUNE_NOT_AUTHORIZED): rune is not for this node (or perhaps completely invalid)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
1502 (RUNE_NOT_PERMITTED): rune does not allow this usage (includes a detailed reason why)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
1503 (RUNE_BLACKLISTED): rune has been explicitly blacklisted.
.SH
AUTHOR
.LP
Shahana Farooqui <\fIsfarooqui@blockstream.com\fR> is mainly responsible for consolidating logic from commando.
.SH
SEE ALSO
.LP
lightning-createrune(7), lightning-blacklistrune(7)
.SH
RESOURCES
.LP
Main web site: \fIhttps://github.com/ElementsProject/lightning\fR
.SH
EXAMPLES
.LP
\fBExample 1\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli checkrune -k \(dqnodeid\(dq=\(dq022d223620a359a47ff7f7ac447c85c46c923da53389221a0054c11c1e3ca31d59\(dq \(dqrune\(dq=\(dq_RWaZZRI7wAYU2hqlFBmYgC_dFczcpAdI_9O87YbDpg9MCZtZXRob2RebGlzdHxtZXRob2ReZ2V0fG1ldGhvZD1zdW1tYXJ5Jm1ldGhvZC9saXN0ZGF0YXN0b3Jl\(dq \(dqmethod\(dq=\(dqlistpeers\(dq \(dqparams\(dq='{}'
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:checkrune#1\(dq,
  \(dqmethod\(dq: \(dqcheckrune\(dq,
  \(dqparams\(dq: {
    \(dqnodeid\(dq: \(dq022d223620a359a47ff7f7ac447c85c46c923da53389221a0054c11c1e3ca31d59\(dq,
    \(dqrune\(dq: \(dq_RWaZZRI7wAYU2hqlFBmYgC_dFczcpAdI_9O87YbDpg9MCZtZXRob2RebGlzdHxtZXRob2ReZ2V0fG1ldGhvZD1zdW1tYXJ5Jm1ldGhvZC9saXN0ZGF0YXN0b3Jl\(dq,
    \(dqmethod\(dq: \(dqlistpeers\(dq,
    \(dqparams\(dq: {}
  }
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqvalid\(dq: true
}
.EE
.PP
\fBExample 2\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli checkrune -k \(dqnodeid\(dq=\(dq022d223620a359a47ff7f7ac447c85c46c923da53389221a0054c11c1e3ca31d59\(dq \(dqrune\(dq=\(dqQUJEYMLGgiaJvMDv_MhR2hiMKIBTbq-PrL-KxcIlirQ9MiZtZXRob2Q9cGF5JnBuYW1lYW1vdW50bXNhdDwxMDAwMA==\(dq \(dqmethod\(dq=\(dqpay\(dq \(dqparams\(dq='{\(dqamount_msat\(dq: 9999}'
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:checkrune#2\(dq,
  \(dqmethod\(dq: \(dqcheckrune\(dq,
  \(dqparams\(dq: {
    \(dqnodeid\(dq: \(dq022d223620a359a47ff7f7ac447c85c46c923da53389221a0054c11c1e3ca31d59\(dq,
    \(dqrune\(dq: \(dqQUJEYMLGgiaJvMDv_MhR2hiMKIBTbq-PrL-KxcIlirQ9MiZtZXRob2Q9cGF5JnBuYW1lYW1vdW50bXNhdDwxMDAwMA==\(dq,
    \(dqmethod\(dq: \(dqpay\(dq,
    \(dqparams\(dq: {
      \(dqamount_msat\(dq: 9999
    }
  }
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqvalid\(dq: true
}
.EE
.PP
