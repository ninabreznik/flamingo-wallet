.\" -*- mode: troff; coding: utf-8 -*-
.TH "LIGHTNING-DELDATASTORE" "7" "" "Core Lightning pre-v24.08" ""
.SH
NAME
.LP
lightning-deldatastore -- Command for removing (plugin) data
.SH
SYNOPSIS
.LP
\fBdeldatastore\fR \fIkey\fR [\fIgeneration\fR] 
.SH
DESCRIPTION
.LP
The \fBdeldatastore\fR RPC command allows plugins to delete data it has stored in the Core Lightning database.
.PP
The command fails if the \fIkey\fR isn't present, or if \fIgeneration\fR is specified and the generation of the data does not exactly match.
.IP "\(bu" 2
\fBkey\fR (one of):
.RS
.IP "\(bu" 2
(array of strings): Key is an array of values (though a single value is treated as a one-element array), to form a heirarchy. Using the first element of the key as the plugin name (e.g. [ 'summary' ]) is recommended. A key can either have children or a value, never both: parents are created and removed automatically.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
(string, optional)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
(string)
.RE
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBgeneration\fR (u64, optional): If specified, means that the update will fail if the previously-existing data is not exactly that generation. This allows for simple atomicity. This is only legal with mode \fCmust-replace\fR or \fCmust-append\fR.
.SH
RETURN VALUE
.LP
On success, an object is returned, containing:
.IP "\(bu" 2
\fBkey\fR (array of strings):
.RS
.IP "\(bu" 2
(string, optional): Part of the key added to the datastore.
.RE
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBgeneration\fR (u64, optional): The number of times this has been updated.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBhex\fR (hex, optional): The hex data which has removed from the datastore.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBstring\fR (string, optional): The data as a string, if it's valid utf-8.
.SH
ERRORS
.LP
The following error codes may occur:
.IP "\(bu" 2
1200: the key does not exist
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
1201: the key does exist, but the generation is wrong
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
-32602: invalid parameters
.SH
AUTHOR
.LP
Rusty Russell <\fIrusty@rustcorp.com.au\fR> is mainly responsible.
.SH
SEE ALSO
.LP
lightning-listdatastore(7), lightning-datastore(7), lightning-datastoreusage(7)
.SH
RESOURCES
.LP
Main web site: \fIhttps://github.com/ElementsProject/lightning\fR
.SH
EXAMPLES
.LP
\fBExample 1\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli deldatastore -k \(dqkey\(dq='[\(dqtest\(dq, \(dqname\(dq]'
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:deldatastore#1\(dq,
  \(dqmethod\(dq: \(dqdeldatastore\(dq,
  \(dqparams\(dq: {
    \(dqkey\(dq: [
      \(dqtest\(dq,
      \(dqname\(dq
    ]
  }
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqkey\(dq: [
    \(dqtest\(dq,
    \(dqname\(dq
  ],
  \(dqgeneration\(dq: 0,
  \(dqhex\(dq: \(dq736176696e67206461746120746f207468652073746f7265\(dq,
  \(dqstring\(dq: \(dqsaving data to the store\(dq
}
.EE
.PP
\fBExample 2\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli deldatastore -k \(dqkey\(dq=\(dqotherkey\(dq \(dqgeneration\(dq=1
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:deldatastore#2\(dq,
  \(dqmethod\(dq: \(dqdeldatastore\(dq,
  \(dqparams\(dq: {
    \(dqkey\(dq: \(dqotherkey\(dq,
    \(dqgeneration\(dq: 1
  }
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqkey\(dq: [
    \(dqotherkey\(dq
  ],
  \(dqgeneration\(dq: 1,
  \(dqhex\(dq: \(dq666f6f626172\(dq,
  \(dqstring\(dq: \(dqfoobar\(dq
}
.EE
.PP
