.\" -*- mode: troff; coding: utf-8 -*-
.TH "LIGHTNING-KEYSEND" "7" "" "Core Lightning pre-v24.08" ""
.SH
NAME
.LP
lightning-keysend -- Send funds to a node without an invoice
.SH
SYNOPSIS
.LP
\fBkeysend\fR \fIdestination\fR \fIamount_msat\fR [\fIlabel\fR] [\fImaxfeepercent\fR] [\fIretry_for\fR] [\fImaxdelay\fR] [\fIexemptfee\fR] [\fIroutehints\fR] [\fIextratlvs\fR] 
.SH
DESCRIPTION
.LP
The \fBkeysend\fR RPC command attempts to find a route to the given destination, and send the specified amount to it. Unlike the \fCpay\fR RPC command the \fCkeysend\fR command does not require an invoice, instead it uses the \fCdestination\fR node ID, and \fCamount\fR to find a route to the specified node.
.PP
In order for the destination to be able to claim the payment, the \fCpayment_key\fR is randomly generated by the sender and included in the encrypted payload for the destination. As a consequence there is not proof-of-payment, like there is with an invoice where the \fCpayment_key\fR is generated on the destination, and the only way sender could have it is by sending a payment. Please ensure that this matches your use-case when using \fCkeysend\fR.
.PP
When using \fI$ lightning-cli\fR, you may skip optional parameters by using \fInull\fR. Alternatively, use \fB-k\fR option to provide parameters by name.
.IP "\(bu" 2
\fBdestination\fR (pubkey): The 33 byte, hex-encoded, node ID of the node that the payment should go to.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBamount_msat\fR (msat): A whole number, or a whole number with suffix \fCmsat\fR or \fCsat\fR, or a three decimal point number with suffix \fCsat\fR, or an 1 to 11 decimal point number suffixed by \fCbtc\fR.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBlabel\fR (string, optional): Used to attach a label to payments, and is returned in lightning-listpays(7) and lightning-listsendpays(7).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBmaxfeepercent\fR (number, optional): Limits the money paid in fees as percentage of the total amount that is to be transferred. The default is 0.5.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBretry_for\fR (u32, optional): Until \fIretry_for\fR seconds passes, the command will keep finding routes and retrying the payment. However, a payment may be delayed for up to \fCmaxdelay\fR blocks by another node; clients should be prepared for this worst case. The default is 60 seconds.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBmaxdelay\fR (u32, optional): Number of blocks the payment may be delayed.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBexemptfee\fR (msat, optional): Used for tiny payments which would be dominated by the fee leveraged by forwarding nodes. Setting \fCexemptfee\fR allows the \fCmaxfeepercent\fR check to be skipped on fees that are smaller than \fIexemptfee\fR. The default is 5000 millisatoshi.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBroutehints\fR (array of arrays, optional):
.RS
.IP "\(bu" 2
(array of objects)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBid\fR (pubkey)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBscid\fR (short_channel_id)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBfeebase\fR (msat)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBfeeprop\fR (u32)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBexpirydelta\fR (u16)
.RE
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBextratlvs\fR (object, optional): Dictionary of additional fields to insert into the final tlv. The format is 'fieldnumber': 'hexstring'.:
.SH
RANDOMIZATION
.LP
To protect user privacy, the payment algorithm performs some randomization.
.PP
1: Route Randomization
.PP
Route randomization means the payment algorithm does not always use the lowest-fee or shortest route. This prevents some highly-connected node from learning all of the user payments by reducing their fees below the network average.
.PP
2: Shadow Route
.PP
Shadow route means the payment algorithm will virtually extend the route by adding delays and fees along it, making it appear to intermediate nodes that the route is longer than it actually is. This prevents intermediate nodes from reliably guessing their distance from the payee.
.PP
Route randomization will never exceed \fImaxfeepercent\fR of the payment. Route randomization and shadow routing will not take routes that would exceed \fImaxdelay\fR.
.SH
RETURN VALUE
.LP
On success, an object is returned, containing:
.IP "\(bu" 2
\fBpayment_preimage\fR (secret): The proof of payment: SHA256 of this \fBpayment_hash\fR.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpayment_hash\fR (hash): The hash of the \fIpayment_preimage\fR which will prove payment.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBcreated_at\fR (number): The UNIX timestamp showing when this payment was initiated.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBparts\fR (u32): How many attempts this took.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBamount_msat\fR (msat): Amount the recipient received.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBamount_sent_msat\fR (msat): Total amount we sent (including fees).
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBstatus\fR (string) (always \(dqcomplete\(dq): Status of payment.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBdestination\fR (pubkey, optional): The final destination of the payment.
.LP
The following warnings may also be returned:
.IP "\(bu" 2
\fBwarning_partial_completion\fR: Not all parts of a multi-part payment have completed.
.LP
You can monitor the progress and retries of a payment using the lightning-paystatus(7) command.
.SH
ERRORS
.LP
The following error codes may occur:
.IP "\(bu" 2
-1: Catchall nonspecific error.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
203: Permanent failure at destination. The \fIdata\fR field of the error will be routing failure object.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
205: Unable to find a route.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
206: Route too expensive. Either the fee or the needed total locktime for the route exceeds your \fImaxfeepercent\fR or \fImaxdelay\fR settings, respectively. The \fIdata\fR field of the error will indicate the actual \fIfee\fR as well as the \fIfeepercent\fR percentage that the fee has of the destination payment amount. It will also indicate the actual \fIdelay\fR along the route.
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
210: Payment timed out without a payment in progress.
.LP
A routing failure object has the fields below:
.PP
\fIerring_index\fR: The index of the node along the route that reported the error. 0 for the local node, 1 for the first hop, and so on.
\fIerring_node\fR: The hex string of the pubkey id of the node that reported the error.
\fIerring_channel\fR: The short channel ID of the channel that has the error, or \fI0:0:0\fR if the destination node raised the error.
\fIfailcode\fR: The failure code, as per BOLT #4.
\fIchannel_update\fR: The hex string of the \fIchannel_update\fR message received from the remote node. Only present if error is from the remote node and the \fIfailcode\fR has the \fCUPDATE\fR bit set, as per BOLT #4.
.SH
AUTHOR
.LP
Christian Decker <\fIdecker@blockstream.com\fR> is mainly responsible.
.SH
SEE ALSO
.LP
lightning-listpays(7), lightning-decodepay(7), lightning-listinvoices(7), lightning-delinvoice(7), lightning-getroute(7), lightning-invoice(7)
.SH
RESOURCES
.LP
Main web site: \fIhttps://github.com/ElementsProject/lightning\fR
.SH
EXAMPLES
.LP
\fBExample 1\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli keysend -k \(dqdestination\(dq=\(dq035d2b1192dfba134e10e540875d366ebc8bc353d5aa766b80c090b39c3a5d885d\(dq \(dqamount_msat\(dq=10000
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:keysend#1\(dq,
  \(dqmethod\(dq: \(dqkeysend\(dq,
  \(dqparams\(dq: {
    \(dqdestination\(dq: \(dq035d2b1192dfba134e10e540875d366ebc8bc353d5aa766b80c090b39c3a5d885d\(dq,
    \(dqamount_msat\(dq: 10000
  }
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqdestination\(dq: \(dq035d2b1192dfba134e10e540875d366ebc8bc353d5aa766b80c090b39c3a5d885d\(dq,
  \(dqpayment_hash\(dq: \(dq80ff407792947a23f193f9a1968e9a437b071364ae3159f83631335c9a453c1b\(dq,
  \(dqcreated_at\(dq: 1722303677.1300898,
  \(dqparts\(dq: 1,
  \(dqamount_msat\(dq: 10000,
  \(dqamount_sent_msat\(dq: 10001,
  \(dqpayment_preimage\(dq: \(dq0d802c9c611bae611d51afa8ddf396df8ba4e0580a2eccfd1120da97e70482a0\(dq,
  \(dqstatus\(dq: \(dqcomplete\(dq
}
.EE
.PP
\fBExample 2\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli keysend -k \(dqdestination\(dq=\(dq0382ce59ebf18be7d84677c2e35f23294b9992ceca95491fcf8a56c6cb2d9de199\(dq \(dqamount_msat\(dq=10000000 \(dqextratlvs\(dq='{\(dq133773310\(dq: \(dq68656c6c6f776f726c64\(dq, \(dq133773312\(dq: \(dq66696c7465726d65\(dq}'
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:keysend#2\(dq,
  \(dqmethod\(dq: \(dqkeysend\(dq,
  \(dqparams\(dq: {
    \(dqdestination\(dq: \(dq0382ce59ebf18be7d84677c2e35f23294b9992ceca95491fcf8a56c6cb2d9de199\(dq,
    \(dqamount_msat\(dq: 10000000,
    \(dqextratlvs\(dq: {
      \(dq133773310\(dq: \(dq68656c6c6f776f726c64\(dq,
      \(dq133773312\(dq: \(dq66696c7465726d65\(dq
    }
  }
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqdestination\(dq: \(dq0382ce59ebf18be7d84677c2e35f23294b9992ceca95491fcf8a56c6cb2d9de199\(dq,
  \(dqpayment_hash\(dq: \(dq3b80a3028343b16f8ab7261343eae40ff73ba833b0b7d4dcbfd42a3078dc322b\(dq,
  \(dqcreated_at\(dq: 1722303679.3164163,
  \(dqparts\(dq: 1,
  \(dqamount_msat\(dq: 10000000,
  \(dqamount_sent_msat\(dq: 10000202,
  \(dqpayment_preimage\(dq: \(dqf76d6b7ef362f33e25eb5571e616f6e539a2c77caf0afa4227d1351546823664\(dq,
  \(dqstatus\(dq: \(dqcomplete\(dq
}
.EE
.PP
\fBExample 3\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli keysend -k \(dqdestination\(dq=\(dq035d2b1192dfba134e10e540875d366ebc8bc353d5aa766b80c090b39c3a5d885d\(dq \(dqamount_msat\(dq=10000 \(dqroutehints\(dq='[[{\(dqscid\(dq: \(dq6250403x3681116x19863\(dq, \(dqid\(dq: \(dq022d223620a359a47ff7f7ac447c85c46c923da53389221a0054c11c1e3ca31d59\(dq, \(dqfeebase\(dq: \(dq1msat\(dq, \(dqfeeprop\(dq: 10, \(dqexpirydelta\(dq: 9}]]'
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:keysend#3\(dq,
  \(dqmethod\(dq: \(dqkeysend\(dq,
  \(dqparams\(dq: {
    \(dqdestination\(dq: \(dq035d2b1192dfba134e10e540875d366ebc8bc353d5aa766b80c090b39c3a5d885d\(dq,
    \(dqamount_msat\(dq: 10000,
    \(dqroutehints\(dq: [
      [
        {
          \(dqscid\(dq: \(dq6250403x3681116x19863\(dq,
          \(dqid\(dq: \(dq022d223620a359a47ff7f7ac447c85c46c923da53389221a0054c11c1e3ca31d59\(dq,
          \(dqfeebase\(dq: \(dq1msat\(dq,
          \(dqfeeprop\(dq: 10,
          \(dqexpirydelta\(dq: 9
        }
      ]
    ]
  }
}
.EE
.PP
Response:
.LP
.EX
{
  \(dqdestination\(dq: \(dq035d2b1192dfba134e10e540875d366ebc8bc353d5aa766b80c090b39c3a5d885d\(dq,
  \(dqpayment_hash\(dq: \(dq0458c01fdd3aa0b9829002390301f92083e78dc27bb293bc3e7caee5d4ed7259\(dq,
  \(dqcreated_at\(dq: 1722303682.5805738,
  \(dqparts\(dq: 2,
  \(dqamount_msat\(dq: 10000,
  \(dqamount_sent_msat\(dq: 10001,
  \(dqpayment_preimage\(dq: \(dq4dad6dcf625f650a35a8199fbda18ea4f6717cdfadb40e6bed2bf5f96a4742b0\(dq,
  \(dqstatus\(dq: \(dqcomplete\(dq
}
.EE
.PP
