.\" -*- mode: troff; coding: utf-8 -*-
.TH "LIGHTNING-NOTIFICATIONS" "7" "" "Core Lightning pre-v24.08" ""
.SH
NAME
.LP
lightning-notifications -- Command to set up notifications.
.SH
SYNOPSIS
.LP
\fBnotifications\fR \fIenable\fR 
.SH
DESCRIPTION
.LP
The \fBnotifications\fR the RPC command enabled notifications for this JSON-RPC connection. By default (and for backwards-compatibility) notifications are disabled.
.PP
Various commands, especially complex and slow ones, offer notifications which indicate their progress.
.IP "\(bu" 2
\fBenable\fR (boolean): Whether to enable or disable notifications.
.SH
NOTIFICATIONS
.LP
Notifications are JSON-RPC objects without an \fIid\fR field. \fIlightningd\fR sends notifications (once enabled with this \fInotifications\fR command) with a \fIparams\fR \fIid\fR field indicating which command the notification refers to.
.PP
Implementations should ignore notifications without an \fIid\fR parameter, or unknown \fImethod\fR.
.PP
Common \fImethod\fRs include:
\fImessage\fR: param \fImessage\fR: a descriptional string indicating something which occurred relating to the command. Param \fIlevel\fR indicates the level, as per lightning-getlog(7): \fIinfo\fR and \fIdebug\fR are typical.
\fIprogress\fR: param \fInum\fR and \fItotal\fR, where \fInum\fR starts at 0 and is always less than \fItotal\fR. Optional param \fIstage\fR with fields \fInum\fR and \fItotal\fR, indicating what stage we are progressing through.
.SH
RETURN VALUE
.LP
On success, if \fIenable\fR was \fItrue\fR, notifications will be forwarded from then on.
.SH
ERRORS
.LP
On failure, one of the following error codes may be returned:
.IP "\(bu" 2
-32602: Error in given parameters.
.SH
AUTHOR
.LP
Rusty Russell <\fIrusty@blockstream.com\fR> wrote the initial version of this man page.
.SH
RESOURCES
.LP
Main web site: \fIhttps://github.com/ElementsProject/lightning\fR
.SH
EXAMPLE NOTIFICATIONS
.LP
\fBNotification 1\fR:
.LP
.EX
{
  \(dqmethod\(dq: \(dqmessage\(dq,
  \(dqparams\(dq: {
    \(dqid\(dq: 1,
    \(dqmessage\(dq: \(dqThis is a test message\(dq,
    \(dqlevel\(dq: \(dqDEBUG\(dq
  }
}
.EE
.PP
\fBNotification 2\fR:
.LP
.EX
{
  \(dqmethod\(dq: \(dqprogress\(dq,
  \(dqparams\(dq: {
    \(dqid\(dq: 2,
    \(dqnum\(dq: 0,
    \(dqtotal\(dq: 30,
    \(dqstage\(dq: {
      \(dqnum\(dq: 0,
      \(dqtotal\(dq: 2
    }
  }
}
.EE
.SH
EXAMPLES
.LP
\fBExample 1\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli notifications -k \(dqenable\(dq=True
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:notifications#1\(dq,
  \(dqmethod\(dq: \(dqnotifications\(dq,
  \(dqparams\(dq: {
    \(dqenable\(dq: true
  }
}
.EE
.PP
Response:
.LP
.EX
{}
.EE
.PP
\fBExample 2\fR: 
.PP
Request:
.LP
.EX
$ lightning-cli notifications -k \(dqenable\(dq=False
.EE
.LP
.EX
{
  \(dqid\(dq: \(dqexample:notifications#2\(dq,
  \(dqmethod\(dq: \(dqnotifications\(dq,
  \(dqparams\(dq: {
    \(dqenable\(dq: false
  }
}
.EE
.PP
Response:
.LP
.EX
{}
.EE
.PP
